# We build artifacts to the `~/repo/dist` directory and attach it to the workspace
# so that the release jobs can access all the build artifacts of the workspace
# context.
#
# Therefore following mental directory model:
# ~/repo: the actual gentype repo
#  |- artifacts: contains all build artifacts to be uploaded to github releases
#  |- src
#  |- ...
#  |- package.json
#
# All commands should all be run in the workdir `~/repo` to prevent confusion.
#
# Research / Inspiration for cross-building ocaml projects w/ opam:
# ----
# https://github.com/facebook/flow/blob/master/.circleci/config.yml

version: 2.1

aliases:
  - &opam_env
    TERM: dumb
    OPAMYES: true

executors:
  linux-opam:
    docker:
      - image: ocaml/opam2:debian-9
        environment:
          <<: *opam_env
    working_directory: ~/repo

commands:
  restore-opam-cache:
    steps:
      #- run:
          #name: Create cache breaker
          #command: |
            #echo "ocaml-4.06.1" > .circleci/opamcachebreaker
            #opam --version >> .circleci/opamcachebreaker
            #cat gentype.opam >> .circleci/opamcachebreaker
            #cat package-lock.json >> .circleci/opamcachebreaker
            #cat .circleci/config.yml >> .circleci/opamcachebreaker
      - restore_cache:
          keys:
          #- v1-opam-cache-{{ arch }}-{{ checksum ".circleci/opamcachebreaker" }}
          - v1-opam-cache-{{ arch }}-v0

  save-opam-cache:
    steps:
      - save_cache:
          #key: v1-opam-cache-{{ arch }}-{{ checksum ".circleci/opamcachebreaker" }}
          key: v1-opam-cache-{{ arch }}-v0
          paths:
            - ~/.opam
            - _opam

  create-opam-switch:
    steps:
      - run:
          name: Install deps from opam
          command: |
            eval $(opam env)
            if [ ! -d _opam ]; then
              opam switch create . 4.06.1 --deps-only | cat
            fi
            
jobs:
  build_linux:
    executor: linux-opam

    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/artifacts
      - run:
          # installs LTS v12 `node`, `npm`, `zip` and `m4` 
          name: Install debian deps
          command: |
            sudo apt-get update
            sudo apt-get --yes install zip m4 curl software-properties-common
            curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
            sudo apt-get --yes install nodejs
      - restore-opam-cache
      - run:
          name: Update opam repo
          command: |
            opam remote list -s | grep upstream >/dev/null || \
              opam remote add upstream https://opam.ocaml.org --all-switches --set-default | cat
            opam update | cat
      - create-opam-switch
      - run:
          name: Install opam dev dependencies
          command: |
            opam install reason.3.6.0 dune.1.11.4 | cat
            eval $(opam env)
      - save-opam-cache
      - run:
          name: Install npm deps
          command: npm install
      - run:
          name: Build gentype
          command: npm run build
      - run:
          name: Test gentype
          command: npm test

      ## Download and cache dependencies
      #- restore_cache:
          #keys:
            #- v1-dependencies-{{ checksum "package-lock.json" }}
            ## fallback to using the latest cache if no exact match is found
            #- v1-dependencies-

      #- save_cache:
          #key: v1-dependencies-{{ checksum "package-lock.json" }}
          #paths:
            #- node_modules

      # Tar things up
      #- run: tar czvf artifacts/gentype-linux.tar.gz -C src/lib/bs/native gentype.native

      #- store_artifacts:
          #path: artifacts/gentype-linux.tar.gz
          #destination: gentype-linux.tar.gz

      #- persist_to_workspace:
          #root: artifacts
          #paths:
            #- gentype-linux.tar.gz

  build_macos:
    macos:
      xcode: "9.0"

    working_directory: ~/repo

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo/artifacts

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-macos-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-macos-dependencies-

      # build & test
      - run: npm install
      - run: npm run build
      - run: npm test

      - save_cache:
          key: v1-macos-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # Tar things up
      - run: tar czvf artifacts/gentype-macos.tar.gz -C src/lib/bs/native gentype.native

      - store_artifacts:
          path: artifacts/gentype-macos.tar.gz
          destination: gentype-macos.tar.gz

      - persist_to_workspace:
          root: artifacts
          paths:
            - gentype-macos.tar.gz

  github_release:
    docker:
      #- image: appropriate/curl:latest
      - image: cibuilds/github:0.10

    working_directory: ~/repo

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo/artifacts

      - run:
          name: Publish Release on Github
          command: |
            VERSION=$CIRCLE_TAG
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
workflows:
  version: 2
  build_deploy:
    jobs:
      - build_linux:
          filters:
            tags:
              only: /.*/
      #- build_macos:
          #filters:
            #tags:
              #only: /.*/
      #- github_release:
          #requires:
            #- build_linux
            #- build_macos
          #filters:
            #branches:
              #ignore: /.*/
            #tags:
              #only: /^v.*/
